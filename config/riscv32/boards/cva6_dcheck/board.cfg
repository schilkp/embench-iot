# Copyright 2025 ETH Zurich and University of Bologna.
# Copyright and related rights are licensed under the Solderpad Hardware
# License, Version 0.51 (the "License"); you may not use this file except in
# compliance with the License.  You may obtain a copy of the License at
# http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
# or agreed to in writing, software, hardware and materials distributed under
# this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.

# Derived from board configuration for rv32 HMC Wally Processor

# Board configuration for Cheshire RV64GC platform

# This is a python setting of parameters for the board.  The following
# parameters may be set (other keys are silently ignored).  Defaults are shown
# in brackets
cc = 'riscv64-unknown-elf-gcc'
# - ld (same value as for cc)
cflags = (['-c', '-fdata-sections', '-ffunction-sections', '-march=rv64gc_zifencei', '-mabi=lp64d', '-mcmodel=medlow', '--specs=nano.specs'] +
          ['-O3', '-g', '-fno-tree-loop-distribute-patterns', '-funroll-all-loops', '-falign-jumps=4', '-falign-functions=16'] +
          ['-DPROFILE=1'] +
          [f'-I{os.path.abspath("../../support_lib/")}'])
ldflags = (['-Wl,-gc-sections', '-march=rv64gc_zifencei', '-mabi=lp64d', '-nostartfiles', '--specs=nano.specs'] +
           [f'-T{os.path.abspath("../../support_lib/cva6_dcheck.ld")}', f'-L{os.path.abspath("../../support_lib/build")}'])
# - cc_define_pattern ('-D{0}')
# - cc_incdir_pattern ('-I{0}')
# - cc_input_pattern ('{0}')
# - cc_output_pattern ('-o {0}')
# - ld_input_pattern ('{0}')
# - ld_output_pattern ('-o {0}')
user_libs = (['-lm', '-lsupport'])
# dummy_libs = (['libm'])
# dummy_libs = (['libgcc', 'libm', 'libc'])
# - cpu_mhz (1)
# - warmup_heat (1)

# The "flags" and "libs" parameters (cflags, ldflags, user_libs, dummy_libs)
# should be lists of arguments to be passed to the compile or link line as
# appropriate.  Patterns are Python format patterns used to create arguments.
# Thus for GCC or Clang/LLVM defined constants can be passed using the prefix
# '-D', and the pattern '-D{0}' would be appropriate (which happens to be the
# default).

# "user_libs" may be absolute file names or arguments to the linker. In the
# latter case corresponding arguments in ldflags may be needed.  For example
# with GCC or Clang/LLVM is "-l" flags are used in "user_libs", the "-L" flags
# may be needed in "ldflags".

# Dummy libs have their source in the "support" subdirectory. Thus if 'crt0'
# is specified, there should be a source file 'dummy-crt0.c' in the support
# directory.

# There is no need to set an unused parameter, and this file may be empty to
# set no flags.

# Parameter values which are duplicated in architecture, board, chip or
# command line are used in the following order of priority
# - default value
# - architecture specific value
# - chip specific value
# - board specific value
# - command line value

# For flags, this priority is applied to individual flags, not the complete
# list of flags.

cpu_mhz = 1
